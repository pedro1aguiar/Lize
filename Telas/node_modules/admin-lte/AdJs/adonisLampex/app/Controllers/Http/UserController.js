'use strict'

const User = use('App/Models/User');

class UserController {

  async index ({ request, response, view }) {
    const user = await User.query().fetch();
    return user;
  }



  async store ({ request }) {

    let data = request.only(["name", "age", "email", "password"]);

    const user = await User.create(data)

    return user;
  }


  async show ({ params, response }) {
    const user = await User.query()
      .where("secure_id", params.secure_id)
      .first();

    if(user){
      return user;
    }else{
      return response.status(404).json({error: "Usuário não encontrado"})
    }
  }


  async update ({ params, request, response }) {
    let data = request.only(["name", "age", "email", "password"]);

    const user = await User.query()
      .where("secure_id", params.secure_id)
      .update(data);

    if(user){
      const newUser = await User.query()
        .where("secure_id", params.secure_id)
        .first();

      return response.status(200).json(newUser);
    }else{
      response.status(400).json({error: "Erro ao alterar usuário"})
    }
  }


  async destroy ({ params, request, response }) {
    const user = await User.query()
      .where("secure_id", params.secure_id)
      .where("delete_at", null)
      .first();

      if(user){
        const data = {delete_at: Date.now()}

        await User.query().where("secure_id", params.secure_id).update(data);

        return response.status(200).json({success: 'Usuário desativo com sucesso!'});
      }else{
        const data = {delete_at: null};

        await User.query().where("secure_id", params.secure_id).update(data);

        return response.status(200).json({success: 'Usuário ativado com sucesso!'});
      }
  }
}

module.exports = UserController
